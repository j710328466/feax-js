{"version":3,"sources":["throttle/js/index.js"],"names":["throttle","fn","time","opt","leading","trailing","context","pre","Date","getTime","timer","_throttle","args","now","setTimeout","apply","clearTimeout","cancel"],"mappings":"AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;AAMA,IAAIA,QAAQ,GAAG,SAAXA,QAAW,CACXC,EADW,EAQV;AAAA,MANDC,IAMC,uEANM,EAMN;AAAA,MALDC,GAKC,uEALK;AACFC,IAAAA,OAAO,EAAE,IADP;AAEFC,IAAAA,QAAQ,EAAE,KAFR;AAGFC,IAAAA,OAAO,EAAE;AAHP,GAKL;AACD,MAAIC,GAAG,GAAG,IAAIC,IAAJ,CAAS,CAAT,EAAYC,OAAZ,EAAV;AACA,MAAIC,KAAJ;;AACA,MAAIC,SAAS,GAAG,SAAZA,SAAY,GAAa;AAAA,sCAATC,IAAS;AAATA,MAAAA,IAAS;AAAA;;AACzB,QAAIC,GAAG,GAAG,IAAIL,IAAJ,GAAWC,OAAX,EAAV;;AAEA,QAAI,CAACN,GAAG,CAACC,OAAT,EAAkB;AACd,UAAIM,KAAJ,EAAW;AAEXA,MAAAA,KAAK,GAAGI,UAAU,CAAC,YAAM;AACrBJ,QAAAA,KAAK,GAAG,IAAR;AACAT,QAAAA,EAAE,CAACc,KAAH,CAASZ,GAAG,CAACG,OAAb,EAAsBM,IAAtB;AACH,OAHiB,EAGfV,IAHe,CAAlB;AAIH,KAPD,MAOO,IAAIW,GAAG,GAAGN,GAAN,GAAYL,IAAhB,EAAsB;AACzBD,MAAAA,EAAE,CAACc,KAAH,CAASZ,GAAG,CAACG,OAAb,EAAsBM,IAAtB;AACAL,MAAAA,GAAG,GAAGM,GAAN;AACH,KAHM,MAGA,IAAIV,GAAG,CAACE,QAAR,EAAkB;AACrBW,MAAAA,YAAY,CAACN,KAAD,CAAZ;AACAA,MAAAA,KAAK,GAAGI,UAAU,CAAC,YAAM;AACrBb,QAAAA,EAAE,CAACc,KAAH,CAASZ,GAAG,CAACG,OAAb,EAAsBM,IAAtB;AACH,OAFiB,EAEfV,IAFe,CAAlB;AAGH;AACJ,GAnBD;;AAqBAS,EAAAA,SAAS,CAACM,MAAV,GAAmB,YAAM;AACrBV,IAAAA,GAAG,GAAG,CAAN;AACAS,IAAAA,YAAY,CAACN,KAAD,CAAZ;AACH,GAHD;AAIH,CApCD","file":"js.8ac7ec0c.js","sourceRoot":"../src","sourcesContent":["\n// document.addEventListener('scroll', throttle(500, 1000, function() {\n//     console.log('what?')\n// }))\n\n// function throttle(delay, interval, fn) {\n//     var startTime = new Date().getTime()\n//     var timer = null\n\n//     return function () {\n//         var nowTime = new Date().getTime()\n//         clearTimeout(timer)\n//         console.log(nowTime - startTime, interval)\n//         if (nowTime - startTime >= interval) {\n//             // fn.applay(this, arguments)\n//             startTime = nowTime\n//         } else {\n//             timer = setTimeout(fn, delay);\n//         }\n//     }\n// }\n\n/**\n * 节流\n * @param {Function} fn 调用方法\n * @param {Number} time 时间间隔\n * @param {Object} opt 配置参数\n */\nlet throttle = (\n    fn,\n    time = 18,\n    opt = {\n        leading: true,\n        trailing: false,\n        context: null\n    }\n) => {\n    let pre = new Date(0).getTime()\n    let timer\n    let _throttle = (...args) => {\n        let now = new Date().getTime()\n\n        if (!opt.leading) {\n            if (timer) return\n\n            timer = setTimeout(() => {\n                timer = null\n                fn.apply(opt.context, args)\n            }, time)\n        } else if (now - pre > time) {\n            fn.apply(opt.context, args)\n            pre = now\n        } else if (opt.trailing) {\n            clearTimeout(timer)\n            timer = setTimeout(() => {\n                fn.apply(opt.context, args)\n            }, time)\n        }\n    }\n\n    _throttle.cancel = () => {\n        pre = 0\n        clearTimeout(timer)\n    }\n}"]}